// Code generated by ros2gen. DO NOT EDIT.

package diagnostic_msgs_srv

/*
#include <rosidl_runtime_c/message_type_support_struct.h>
#include <diagnostic_msgs/srv/self_test.h>
*/
import "C"

import (
	"context"
	"errors"
	"unsafe"

	"github.com/okieraised/rclgo/humble"
)

func init() {
	<no value>.RegisterService("diagnostic_msgs/SelfTest", SelfTestTypeSupport)
	<no value>.RegisterService("diagnostic_msgs/srv/SelfTest", SelfTestTypeSupport)
}

type _SelfTestTypeSupport struct {}

func (s _SelfTestTypeSupport) Request() <no value>.MessageTypeSupport {
	return SelfTest_RequestTypeSupport
}

func (s _SelfTestTypeSupport) Response() <no value>.MessageTypeSupport {
	return SelfTest_ResponseTypeSupport
}

func (s _SelfTestTypeSupport) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_service_type_support_handle__diagnostic_msgs__srv__SelfTest())
}

// Modifying this variable is undefined behavior.
var SelfTestTypeSupport <no value>.ServiceTypeSupport = _SelfTestTypeSupport{}

// SelfTestClient wraps <no value>.Client to provide type safe helper
// functions
type SelfTestClient struct {
	*<no value>.Client
}

// NewSelfTestClient creates and returns a new client for the
// SelfTest
func NewSelfTestClient(node *<no value>.Node, serviceName string, options *<no value>.ClientOptions) (*SelfTestClient, error) {
	client, err := node.NewClient(serviceName, SelfTestTypeSupport, options)
	if err != nil {
		return nil, err
	}
	return &SelfTestClient{client}, nil
}

func (s *SelfTestClient) Send(ctx context.Context, req *SelfTest_Request) (*SelfTest_Response, *<no value>.ServiceInfo, error) {
	msg, rmw, err := s.Client.Send(ctx, req)
	if err != nil {
		return nil, rmw, err
	}
	typedMessage, ok := msg.(*SelfTest_Response)
	if !ok {
		return nil, rmw, errors.New("invalid message type returned")
	}
	return typedMessage, rmw, err
}

type SelfTestServiceResponseSender struct {
	sender <no value>.ServiceResponseSender
}

func (s SelfTestServiceResponseSender) SendResponse(resp *SelfTest_Response) error {
	return s.sender.SendResponse(resp)
}

type SelfTestServiceRequestHandler func(*<no value>.ServiceInfo, *SelfTest_Request, SelfTestServiceResponseSender)

// SelfTestService wraps <no value>.Service to provide type safe helper
// functions
type SelfTestService struct {
	*<no value>.Service
}

// NewSelfTestService creates and returns a new service for the
// SelfTest
func NewSelfTestService(node *<no value>.Node, name string, options *<no value>.ServiceOptions, handler SelfTestServiceRequestHandler) (*SelfTestService, error) {
	h := func(rmw *<no value>.ServiceInfo, msg <no value>.Message, rs <no value>.ServiceResponseSender) {
		m := msg.(*SelfTest_Request)
		responseSender := SelfTestServiceResponseSender{sender: rs} 
		handler(rmw, m, responseSender)
	}
	service, err := node.NewService(name, SelfTestTypeSupport, options, h)
	if err != nil {
		return nil, err
	}
	return &SelfTestService{service}, nil
}