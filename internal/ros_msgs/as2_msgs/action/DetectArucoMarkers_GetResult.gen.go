// Code generated by ros2gen. DO NOT EDIT.

package as2_msgs_action

/*
#include <rosidl_runtime_c/message_type_support_struct.h>
#include <as2_msgs/action/detect_aruco_markers.h>
*/
import "C"

import (
	"context"
	"errors"
	"unsafe"

	"github.com/okieraised/rclgo/humble"
)

func init() {
	<no value>.RegisterService("as2_msgs/DetectArucoMarkers_GetResult", DetectArucoMarkers_GetResultTypeSupport)
	<no value>.RegisterService("as2_msgs/action/DetectArucoMarkers_GetResult", DetectArucoMarkers_GetResultTypeSupport)
}

type _DetectArucoMarkers_GetResultTypeSupport struct {}

func (s _DetectArucoMarkers_GetResultTypeSupport) Request() <no value>.MessageTypeSupport {
	return DetectArucoMarkers_GetResult_RequestTypeSupport
}

func (s _DetectArucoMarkers_GetResultTypeSupport) Response() <no value>.MessageTypeSupport {
	return DetectArucoMarkers_GetResult_ResponseTypeSupport
}

func (s _DetectArucoMarkers_GetResultTypeSupport) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_service_type_support_handle__as2_msgs__action__DetectArucoMarkers_GetResult())
}

// Modifying this variable is undefined behavior.
var DetectArucoMarkers_GetResultTypeSupport <no value>.ServiceTypeSupport = _DetectArucoMarkers_GetResultTypeSupport{}

// DetectArucoMarkers_GetResultClient wraps <no value>.Client to provide type safe helper
// functions
type DetectArucoMarkers_GetResultClient struct {
	*<no value>.Client
}

// NewDetectArucoMarkers_GetResultClient creates and returns a new client for the
// DetectArucoMarkers_GetResult
func NewDetectArucoMarkers_GetResultClient(node *<no value>.Node, serviceName string, options *<no value>.ClientOptions) (*DetectArucoMarkers_GetResultClient, error) {
	client, err := node.NewClient(serviceName, DetectArucoMarkers_GetResultTypeSupport, options)
	if err != nil {
		return nil, err
	}
	return &DetectArucoMarkers_GetResultClient{client}, nil
}

func (s *DetectArucoMarkers_GetResultClient) Send(ctx context.Context, req *DetectArucoMarkers_GetResult_Request) (*DetectArucoMarkers_GetResult_Response, *<no value>.ServiceInfo, error) {
	msg, rmw, err := s.Client.Send(ctx, req)
	if err != nil {
		return nil, rmw, err
	}
	typedMessage, ok := msg.(*DetectArucoMarkers_GetResult_Response)
	if !ok {
		return nil, rmw, errors.New("invalid message type returned")
	}
	return typedMessage, rmw, err
}

type DetectArucoMarkers_GetResultServiceResponseSender struct {
	sender <no value>.ServiceResponseSender
}

func (s DetectArucoMarkers_GetResultServiceResponseSender) SendResponse(resp *DetectArucoMarkers_GetResult_Response) error {
	return s.sender.SendResponse(resp)
}

type DetectArucoMarkers_GetResultServiceRequestHandler func(*<no value>.ServiceInfo, *DetectArucoMarkers_GetResult_Request, DetectArucoMarkers_GetResultServiceResponseSender)

// DetectArucoMarkers_GetResultService wraps <no value>.Service to provide type safe helper
// functions
type DetectArucoMarkers_GetResultService struct {
	*<no value>.Service
}

// NewDetectArucoMarkers_GetResultService creates and returns a new service for the
// DetectArucoMarkers_GetResult
func NewDetectArucoMarkers_GetResultService(node *<no value>.Node, name string, options *<no value>.ServiceOptions, handler DetectArucoMarkers_GetResultServiceRequestHandler) (*DetectArucoMarkers_GetResultService, error) {
	h := func(rmw *<no value>.ServiceInfo, msg <no value>.Message, rs <no value>.ServiceResponseSender) {
		m := msg.(*DetectArucoMarkers_GetResult_Request)
		responseSender := DetectArucoMarkers_GetResultServiceResponseSender{sender: rs} 
		handler(rmw, m, responseSender)
	}
	service, err := node.NewService(name, DetectArucoMarkers_GetResultTypeSupport, options, h)
	if err != nil {
		return nil, err
	}
	return &DetectArucoMarkers_GetResultService{service}, nil
}